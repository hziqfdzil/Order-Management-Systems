import java.io.*;
import java.util.ArrayList;
import java.util.Scanner;
public class OrderManagementSystem {
    private static ArrayList<Order> orderList = new ArrayList<>();

    public static void main(String[] args) {
        loadOrdersFromFile("C:\\Users\\Muhammad Haziq\\Downloads\\orders.txt");

        Scanner scanner = new Scanner(System.in);
        while (true) {
            printMenu();
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline
            switch (choice) {
                case 1:
                    addOrder(scanner);
                    break;
                case 2:
                    updateOrder(scanner);
                    break;
                case 3:
                    deleteOrder(scanner);
                    break;
                case 4:
                    displayOrders(scanner);
                    break;
                case 5:
                    System.out.println("Exiting...");
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private static void printMenu() {
        System.out.println("1. Add a new order");
        System.out.println("2. Update an order");
        System.out.println("3. Delete an order");
        System.out.println("4. Display orders");
        System.out.println("5. Exit");
    }

    private static void loadOrdersFromFile(String filename) {
        try (BufferedReader br = new BufferedReader(new FileReader(filename))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] orderData = line.split(",");
                int orderId = Integer.parseInt(orderData[0]);
                String customerName = orderData[1];
                String customerAddress = orderData[2];
                String productName = orderData[3];
                int quantityOrdered = Integer.parseInt(orderData[4]);
                double pricePerUnit = Double.parseDouble(orderData[5]);
                String orderStatus = orderData[6];
                orderList.add(new Order(orderId, customerName, customerAddress, productName, quantityOrdered, pricePerUnit, orderStatus));
            }
        } catch (IOException e) {
            System.out.println("Error reading orders file: " + e.getMessage());
        }
    }

    private static void addOrder(Scanner scanner) {
        System.out.print("Enter Order ID: ");
        int orderId = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        for (Order order : orderList) {
            if (order.getOrderId() == orderId) {
                System.out.println("Order ID already exists. Choose a different ID.");
                return;
            }
        }
        System.out.print("Enter Customer Name: ");
        String customerName = scanner.nextLine();

        System.out.print("Enter Customer Address: ");
        String customerAddress = scanner.nextLine();

        System.out.print("Enter Product Name: ");
        String productName = scanner.nextLine();

        System.out.print("Enter Quantity Ordered: ");
        int quantityOrdered = scanner.nextInt();

        System.out.print("Enter Price Per Unit: ");
        double pricePerUnit = scanner.nextDouble();
        scanner.nextLine();

        System.out.print("Enter Order Status: ");
        String orderStatus = scanner.nextLine();

        Order order = new Order(orderId, customerName, customerAddress, productName, quantityOrdered, pricePerUnit, orderStatus);
        orderList.add(order);
        System.out.println("Order added successfully.");
        saveOrdersToFile("orders.txt");
    }

    private static void updateOrder(Scanner scanner) {
        System.out.print("Enter Order ID to update: ");
        int orderId = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        for (Order order : orderList) {
            if (order.getOrderId() == orderId) {
                System.out.print("Enter Customer Name (current: " + order.getCustomerName() + "): ");
                String customerName = scanner.nextLine();
                System.out.print("Enter Customer Address (current: " + order.getCustomerAddress() + "): ");
                String customerAddress = scanner.nextLine();
                System.out.print("Enter Product Name (current: " + order.getProductName() + "): ");
                String productName = scanner.nextLine();
                System.out.print("Enter Quantity Ordered (current: " + order.getQuantityOrdered() + "): ");
                int quantityOrdered = scanner.nextInt();
                System.out.print("Enter Price Per Unit (current: " + order.getPricePerUnit() + "): ");
                double pricePerUnit = scanner.nextDouble();
                scanner.nextLine();
                System.out.print("Enter Order Status (current: " + order.getOrderStatus() + "): ");
                String orderStatus = scanner.nextLine();

                order.setCustomerName(customerName);
                order.setCustomerAddress(customerAddress);
                order.setProductName(productName);
                order.setQuantityOrdered(quantityOrdered);
                order.setPricePerUnit(pricePerUnit);
                order.setOrderStatus(orderStatus);
                System.out.println("Order updated successfully.");
                saveOrdersToFile("orders.txt");
                return;
            }
        }
        System.out.println("Order ID not found.");
    }

    private static void deleteOrder(Scanner scanner) {
        System.out.print("Enter Order ID to delete: ");
        int orderId = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        Order orderToRemove = null;
        for (Order order : orderList) {
            if (order.getOrderId() == orderId) {
                orderToRemove = order;
                break;
            }
        }
        if (orderToRemove != null) {
            orderList.remove(orderToRemove);
            System.out.println("Order deleted successfully.");
            saveOrdersToFile("orders.txt");
        } else {
            System.out.println("Order ID not found.");
        }
    }

    private static void displayOrders(Scanner scanner) {
        System.out.println("1. Display all orders");
        System.out.println("2. Display orders by customer name");
        System.out.println("3. Display orders by product name");
        System.out.println("4. Display orders by status");
        int choice = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        switch (choice) {
            case 1:
                for (Order order : orderList) {
                    System.out.println(order);
                }
                break;
            case 2:
                System.out.print("Enter Customer Name: ");
                String customerName = scanner.nextLine();
                for (Order order : orderList) {
                    if (order.getCustomerName().equalsIgnoreCase(customerName)) {
                        System.out.println(order);
                    }
                }
                break;
            case 3:
                System.out.print("Enter Product Name: ");
                String productName = scanner.nextLine();
                for (Order order : orderList) {
                    if (order.getProductName().equalsIgnoreCase(productName)) {
                        System.out.println(order);
                    }
                }
                break;
            case 4:
                System.out.print("Enter Order Status: ");
                String orderStatus = scanner.nextLine();
                for (Order order : orderList) {
                    if (order.getOrderStatus().equalsIgnoreCase(orderStatus)) {
                        System.out.println(order);
                    }
                }
                break;
            default:
                System.out.println("Invalid choice.");
        }
    }

    private static void saveOrdersToFile(String filename) {
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(filename))) {
            for (Order order : orderList) {
                bw.write(order.getOrderId() + "," + order.getCustomerName() + "," + order.getCustomerAddress() + "," +
                    order.getProductName() + "," + order.getQuantityOrdered() + "," + order.getPricePerUnit() + "," +
                    order.getOrderStatus());
                bw.newLine();
            }
        } catch (IOException e) {
            System.out.println("Error writing orders file: " + e.getMessage());
        }
    }
}
